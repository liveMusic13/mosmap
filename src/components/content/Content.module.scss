@use '@st/functions.scss' as func;
@use '@st/variables.scss' as vars;
@use '@st/mixins.scss' as mix;

.wrapper_content {
	padding: 0px func.adapt(60px, 1920px);
	width: 100%;
	height: calc(
		100vh - #{func.adapt(80px, 1920px)} - #{func.adapt(163px, 1920px)}
	);
	display: flex;
	flex-direction: column;
	position: relative; // HELP: для лоадера

	@media (max-width: 767.98px) {
		height: auto;
	}
}

.title {
	font-size: 2.71rem;
	color: vars.$black_hard;
	text-transform: uppercase;
	font-family: 'Intro';
	margin: func.adapt(15px, 1920px) 0;

	@media (max-width: 767.98px) {
		font-size: 0.928rem;
		margin: func.adapt(15px, 480px) 0px func.adapt(5px, 480px);
	}

	@media (max-width: 479.98px) {
		margin: func.adapt(15px, 360px) 0px func.adapt(5px, 360px);
	}
}

// HELP: Порядок вычета высоты для .block__content следующий: вся высота минус шапка, минус название карты и отступы от него, минус футер и минус блок опций. Нужно для того чтобы высота элементов учитывалась и это блок не выталкивал другие элементы за границы экрана и не вызывал скрола.

.block__content {
	padding: func.adapt(20px, 1920px) 0px;
	height: calc(
		100vh - #{func.adapt(80px, 1920px)} - #{func.adapt(80px, 1920px)} -
			#{func.adapt(163px, 1920px)} - #{func.adapt(45px, 1920px)}
	);
	flex-grow: 1;
	width: 100%;
	display: flex;
	gap: func.adapt(20px, 1920px);
	position: relative;

	@media (max-width: 767.98px) {
		padding: func.adapt(20px, 480px) 0px;
		flex-direction: column;
		height: auto;
	}
}

.block__buttons_map {
	position: absolute;
	right: func.adapt(16px, 1920px);
	top: func.adapt(36px, 1920px);
	z-index: 500;
	display: flex;
	align-items: center;
	gap: func.adapt(10px, 1920px);

	@media (max-width: 767.98px) {
		right: func.adapt(10px, 480px);
		top: func.adapt(30px, 480px);
		gap: func.adapt(10px, 480px);
	}

	> button {
		box-shadow: 0px 2px 15px rgba($color: vars.$green_light, $alpha: 0.5);

		&:hover {
			> .hover__text {
				display: block;
			}
		}

		@media (max-width: 767.98px) {
			border-radius: func.adapt(6px, 480px);
		}
	}
}

.icon_svg {
	width: func.adapt(27px, 1920px);
	height: func.adapt(27px, 1920px);
	transition:
		width 0.3s ease,
		height 0.3s ease;

	&:hover {
		width: func.adapt(30px, 1920px);
		height: func.adapt(30px, 1920px);

		@media (max-width: 767.98px) {
			width: func.adapt(29px, 480px);
			height: func.adapt(29px, 480px);
		}
	}

	@media (max-width: 767.98px) {
		width: func.adapt(29px, 480px);
		height: func.adapt(29px, 480px);
	}
}

.hover__text {
	@include mix.hover_text();
}
