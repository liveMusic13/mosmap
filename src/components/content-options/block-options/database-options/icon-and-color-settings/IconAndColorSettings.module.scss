@use '@st/functions.scss' as func;
@use '@st/variables.scss' as vars;
@use '@st/mixins.scss' as mix;

.wrapper_iconAndColorSettings {
	position: fixed;
	top: 50%;
	left: 50%;
	z-index: 2000;
	transform: translate(-50%, -50%);
	padding: func.adapt(25px, 1920px);
	border-radius: func.adapt(12px, 1920px);
	border: 1px solid rgba($color: vars.$grey_lines, $alpha: 0.4);
	box-shadow: 0px 0px 10px rgba($color: vars.$green_light, $alpha: 0.3);
	background-color: vars.$white;

	overflow-y: auto;
	overflow-x: hidden;
	@include mix.scrollbar();
	max-height: 70%; //HELP: Ограничить максимальную высоту, чтобы когда компонент не помещается по высоте , то появлялся скролбар. А когда в компоненте мало контента, то он просто стоял маленький по центру экрана.

	@media (max-width: 767.98px) {
		padding: func.adapt(20px, 480px);
		border-radius: func.adapt(12px, 480px);
		width: 100%;
	}
	@media (max-width: 479.98px) {
		padding: func.adapt(20px, 360px);
		border-radius: func.adapt(12px, 360px);
	}
}

.block__title {
	display: flex;
	align-items: center;
	justify-content: space-between;
	gap: func.adapt(25px, 1920px);

	> button {
		text-transform: uppercase;
		width: func.adapt(125px, 1920px);
		height: func.adapt(40px, 1920px);
		font-size: 1rem;
		transition:
			font-size 0.3s ease,
			width 0.3s ease,
			height 0.3s ease;

		&:hover {
			font-size: 1.08rem;
			width: func.adapt(130px, 1920px);
			height: func.adapt(45px, 1920px);

			@media (max-width: 767.98px) {
				width: func.adapt(130px, 480px);
				height: func.adapt(40px, 480px);
			}
			@media (max-width: 479.98px) {
				width: func.adapt(130px, 360px);
				height: func.adapt(40px, 360px);
			}
		}

		@media (max-width: 767.98px) {
			width: func.adapt(130px, 480px);
			height: func.adapt(40px, 480px);
			border-radius: func.adapt(8px, 480px);
		}
		@media (max-width: 479.98px) {
			width: func.adapt(130px, 360px);
			height: func.adapt(40px, 360px);
			border-radius: func.adapt(8px, 360px);
		}
	}
}

.title {
	font-size: 1.57rem;
	font-weight: 700;
	color: vars.$black_hard;

	@media (max-width: 767.98px) {
		font-size: 2.28rem;
	}
}

.line {
	margin-top: func.adapt(25px, 1920px);
	margin-bottom: func.adapt(15px, 1920px);
	width: 100%;
	height: 1px;
	border-bottom: 1px dotted vars.$grey_lines;

	@media (max-width: 767.98px) {
		margin: func.adapt(16px, 480px) 0px;
	}
	@media (max-width: 479.98px) {
		margin: func.adapt(16px, 360px) 0px;
	}
}

.block__content {
	border-radius: func.adapt(11px, 1920px);
	background-color: vars.$blue_very_light;

	@media (max-width: 767.98px) {
		border-radius: func.adapt(11px, 480px);
	}
	@media (max-width: 479.98px) {
		border-radius: func.adapt(11px, 360px);
	}

	> button {
		text-transform: uppercase;
		width: func.adapt(125px, 1920px);
		height: func.adapt(40px, 1920px);
		font-size: 1rem;
		transition:
			font-size 0.3s ease,
			width 0.3s ease,
			height 0.3s ease;

		&:hover {
			font-size: 1.08rem;
			width: func.adapt(130px, 1920px);
			height: func.adapt(45px, 1920px);
			@media (max-width: 767.98px) {
				width: 100%;
				height: func.adapt(40px, 480px);
			}
			@media (max-width: 479.98px) {
				height: func.adapt(40px, 360px);
			}
		}

		@media (max-width: 767.98px) {
			width: 100%;
			height: func.adapt(40px, 480px);
			border-radius: func.adapt(8px, 480px);
		}
		@media (max-width: 479.98px) {
			height: func.adapt(40px, 360px);
			border-radius: func.adapt(8px, 360px);
		}
	}
}
